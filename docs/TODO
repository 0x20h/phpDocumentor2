Roadmap
=======

0.9: Improve Theming and CLI
----------------------------

* Check Agavi; the @params do not have an argument name; the template probably handles this wrong
  * E-mail addresses in tags are encoded
  * Submenu (includes, functions, etc. shows all categories even while only a few are given)
  * When there is only 1 package with a lot of subpackages, make the package a static header
  * Short description and long description are not correctly separated; see AgaviContext class docblock
* What happens when the value of a constant or the default value of an argument or variable is not a string?
* Clicking in Search doesn't work in Aura _only under Chrome_; why?
* Add an option to auto-expand the sidebar on page load
* Add small class diagram in class description showing all parents (and their parents) and direct children, preferably clickable
* include section should be clickable (click-through)

 1.0: Pre-1.0 release actions
-----------------------------

* Revise Page level docblock searching algorythm; with the introduction of namespaces has the @package tag become
  obsolete and it seems incomplete.
* Validate each @param with the argument:
 * if the number of arguments does not compare; throw an error
 * if an argument does not have the same type as the @param; throw an error
 * if the @param has multiple types and the argument has a typehint and not a default; throw an error
* Add option to disable certain types of DocBlox errors per directory / file pattern
  ( i.e. check on file-level DocBlock; constant level DocBlock; etc)
* Safari does not show the svg nicely, it places it into a very small scrollbox
* Profile the application using XHProf to determine slow points and improve performance
* Refactor mechanism which strips information from the path; it now checks the -d but should actually check what the
  lowest common folder is

1.1: Add custom documents and statistics
-----------------------------------------

* add possibility for README, INSTALL, TODO in markdown format
* add possibility for custom documents in markdown format
* add mime-type option to long-description so that the transformation could change it into the required type: i.e. markdown = text/x-markdown
 * add Markdown support in long descriptions and @example (thanks @pmjones)
* Syntax highlight @example annotation content

1.2
---

* Add Docblock templates: http://manual.phpdoc.org/HTMLSmartyConverter/HandS/phpDocumentor/tutorial_phpDocumentor.howto.pkg.html#basics.docblocktemplate
* Consider implementing disqus support
* Add Twig output writer
* Add statistics (nr of files, classes, methods, with or without docblock. Percentage, lines per method, lines per file, configurable thresholds, etc)
* Research: allow connections between multiple docblox generated files?
* UML Class Diagram
* Do some grouping thing with the @since; it might be nice to get an overview what is added per version?

The Future
----------

* Refactor XSL templates to
  * Have a neat hierarchy in the file/content pages
  * Clean them up
  * Separate them further into distinct files
  * Allow for more modularity and easier templating by just including a header or so
* Create an XSD for the structure file
* Improve exceptions per the PHP Coding Standards (http://groups.google.com/group/php-standards/web/php-coding-standard)
* Refactor Static Reflection to
  * Be uniform with the Reflector interface and PHP's Dynamic Reflection
  * Move XML creation to the Parser

Technical Debt
--------------

* Add documentation
* Write unit tests
* Adopt PEAR standard; investigate PSR0

**More items will be added to this list as the project furthers.**
