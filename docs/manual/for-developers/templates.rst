Templates
=========

This document describes the technical details for the use of Templates; where a
Template represents a collection of transformations which, when executed,
produce a meaningful representation of the User's source code.

Examples of output generated by a *Template* can be, but is not limited to:

* A HTML website
* A single PDF
* An XML file containing the errors found in the checkstyle format
* or a combination of the above

Scope
-----

- The actual transformation process is not described in this document, this is
  considered to be an implementation detail of the Transformer and individual
  Writers.

Basic Usage
-----------

The simplest example of using a template is by defining it in a configuration
file and pass that in the constructor using a Template Loader:

.. code-block:: php

   use phpDocumentor\Transformer\Template;

   $template = new Template(
       Template\Loader\Xml('template.xml')
   );

   // ... initialize $transformer ...
   $transformer->execute($template);

It is also possible to assemble your template using plain PHP code. You would
need to create and add each individual transformation. A more detailed
examination of the different components is in the next chapters.

.. code-block:: php

   use phpDocumentor\Transformer\Template;
   use phpDocumentor\Transformer\Transformation;
   use phpDocumentor\Transformer\Writer\Factory;

   // ... initialize $transformer ...

   $writer_factory = new Factory($transformer);
   $xsl_writer = $writer_factory->get('Xsl');

   $template = new Template();
   $template->add(new Transformation($xsl_writer, $artefact, $source));
   $template->add(new Transformation($xsl_writer, $artefact, $source, $query));

   $transformer->execute($template);

Transformations
---------------

Writers
~~~~~~~

phpDocumentor supports a number of writers:

*File operations*

.. toctree::
   :maxdepth: 1

   Writers/FileIO

*HTML Rendering*

.. toctree::
   :maxdepth: 1

   Writers/Xsl
   Writers/Twig
   Writers/Sourcecode
   Writers/Search

*XML Rendering*

.. toctree::
   :maxdepth: 1

   Writers/Checkstyle

*Graph rendering*

.. toctree::
   :maxdepth: 1

   Writers/Graph
